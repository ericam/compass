// @doc off
// These defaults make the arguments optional for this mixin
// If you like, set different defaults before importing.
// @doc on

@import "shared";

// The default color for box shadows
$default-box-shadow-color: #333333 !default;

// The default horizontal offset. Positive is to the right.
$default-box-shadow-h-offset: 1px !default;

// The default vertical offset. Positive is down.
$default-box-shadow-v-offset: 1px !default;

// The default blur length.
$default-box-shadow-blur: 5px !default;

// The default spread length.
$default-box-shadow-spread : false !default;

// The default shadow instet: inset or false (for standard shadow).
$default-box-shadow-inset : false !default;

// Provides cross-browser CSS box shadows for Webkit, Gecko, and CSS3.
// Arguments are color, horizontal offset, vertical offset, blur length, spread length, and inset.
@mixin single-box-shadow(
  $color  : $default-box-shadow-color,
  $hoff   : $default-box-shadow-h-offset,
  $voff   : $default-box-shadow-v-offset,
  $blur   : $default-box-shadow-blur,
  $spread : $default-box-shadow-spread,
  $inset  : $default-box-shadow-inset
) {
  @if not ($inset == true or $inset == false or $inset == inset) {
    @warn "$inset expected to be true or the inset keyword. Got #{$inset} instead. Using: inset";
  }

  @if $color == none {
    @include multiple-box-shadows(none);
  } @else {
    $full   : $hoff $voff;
    @if $blur   { $full: $full $blur;   }
    @if $spread { $full: $full $spread; }
    @if $color  { $full: $full $color;  }
    @if $inset  { $full: inset $full;   }
    @include multiple-box-shadows($full);
  }
}

// Provides cross-browser box shadows when one or more box shadows are needed.
@mixin multiple-box-shadows(
  $shadow-1,
  $shadow-2 : false,
  $shadow-3 : false,
  $shadow-4 : false,
  $shadow-5 : false,
  $shadow-6 : false,
  $shadow-7 : false,
  $shadow-8 : false,
  $shadow-9 : false,
  $shadow-10: false
) {
  // Ugh. Sass needs variable argument support.
  $shadow : $shadow-1;
  @if $shadow-2  { $shadow: $shadow, $shadow-2;  }
  @if $shadow-3  { $shadow: $shadow, $shadow-3;  }
  @if $shadow-4  { $shadow: $shadow, $shadow-4;  }
  @if $shadow-5  { $shadow: $shadow, $shadow-5;  }
  @if $shadow-6  { $shadow: $shadow, $shadow-6;  }
  @if $shadow-7  { $shadow: $shadow, $shadow-7;  }
  @if $shadow-8  { $shadow: $shadow, $shadow-8;  }
  @if $shadow-9  { $shadow: $shadow, $shadow-9;  }
  @if $shadow-10 { $shadow: $shadow, $shadow-10; }
  @include experimental(box-shadow, $shadow,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

@mixin box-shadow(
  $shadow-1,
  $shadow-2 : false,
  $shadow-3 : false,
  $shadow-4 : false,
  $shadow-5 : false,
  $shadow-6 : false,
  $shadow-7 : false,
  $shadow-8 : false,
  $shadow-9 : false,
  $shadow-10: false
) {
  @include multiple-box-shadows(
    $shadow-1, $shadow-2, $shadow-3,
    $shadow-4, $shadow-5, $shadow-6,
    $shadow-7, $shadow-8, $shadow-9, $shadow-10
  );
}
